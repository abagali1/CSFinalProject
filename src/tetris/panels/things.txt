      switch (myType) {

         case 0:
            target = 2;
            for (int i = 2; i <= points.length - 1; i++) {
               if ((board[((points[i].x) / 10)][((points[i].y) / 10) + 1]) && (getY() + getHeight() < 400))
                  count++;
               else
                  return false;
            }
            break;

         case 1:
            if (getFlipState() == 0) {
               target = 4;
               for (Point p : points) {
                  if ((board[((p.x) / 10)][((p.y) / 10) + 1]) && (getY() + getHeight() < 400))
                     count++;
                  else
                     return false;
               }
            } else {
               target = 1;
               if ((board[((points[3].x) / 10)][((points[3].y) / 10) + 1]) && getY() + getHeight() < 400)
                  count = target;
               return ((board[((points[3].x) / 10)][((points[3].y) / 10) + 1]) && getY() + getHeight() < 400);
            }
            break;

         case 2:
            switch (getFlipState()) {

               case 0:
                  target = 3;
                  for (int i = 0; i <= 2; i++) {
                     if ((board[((points[i].x) / 10)][((points[i].y) / 10) + 1]) && getY() + getHeight() < 400)
                        count++;
                     else
                        return false;
                  }
                  break;

               default:
                  target = 4;
                  for (Point p : points) {
                     if ((board[((p.x) / 10)][((p.y) / 10) + 1]) && (getY() + getHeight() < 400))
                        count++;
                     else
                        return false;
                  }
                  break;
            }
            break;

         case 3:
            switch (getFlipState()){
               case 3:
                  target = 2;
                  for(int i=0;i<=1;i++){
                     if( (board[((points[i]).x)/10][((points[i].y)/10)+2]) && (getY() + getHeight() < 400) )
                        count++;
                     else
                        return false;
                  }
                  break;

               default:
                  target = 4;
                  for(Point p: points) {
                     if ((board[((p.x) / 10)][((p.y) / 10) + 1]) && (getY() + getHeight() < 400))
                        count++;
                     else
                        return false;
                  }
                  break;
            }
            break;

         case 4:
            if(getFlipState() == 0){
               target = 3;
               for(int i=0;i<=1;i++){
                  if( (board[((points[i].x)/10)][((points[i].y)/10)+1]) && getY()+getHeight() < 400)
                     count++;
                  else
                     return false;
               }
               if( (board[((points[3].x)/10)][((points[3].y)/10)+1]) && getY() + getHeight() < 400)
                  count++;
               break;
            }else{
               target = 4;
               for(Point p: points){
                  if( (board[((p.x)/10)][((p.y)/10)+1]) && (getY()+getHeight() < 400))
                     count++;
                  else
                     return false;
               }
               break;
            }

         case 5:
            if(getFlipState() == 2){
               target = 2;
               if( (board[((points[0].x)/10)][((points[0].y)/10)+1]) && (getY()+getHeight() < 400) )
                  count++;
               else
                  return false;

               if( (board[((points[2].x)/10)][((points[2].y)/10)+1]) && (getY()+getHeight() < 400) )
                  count++;
               else
                  return false;
            }else{
               target = 4;
               for(Point p: points){
                  if( (board[((p.x)/10)][((p.y)/10)+1]) && (getY()+getHeight() < 400))
                     count++;
                  else
                     return false;
               }
            }
            break;

         case 6:

            switch (getFlipState()){

               case 0:
                  target = 3;
                  for(int i =0;i<=3;i++){
                     if( (board[((points[i].x)/10)][((points[i].y)/10)+1]) && (getY()+getHeight() < 400))
                        count++;
                     else
                        return false;
                  }
                  break;

               case 3:
                  target = 2;
                  if( (board[((points[0].x)/10)][((points[0].y)/10)+1]) && (getY()+getHeight() < 400))
                     count++;
                  else
                     return false;

                  if( (board[((points[3].x)/10)][((points[3].y)/10)+1]) && (getY()+getHeight() < 400))
                     count++;
                  else
                     return false;
                  break;

               default:
                  target = 4;
                  for(Point p: points) {
                     if ((board[((p.x) / 10)][((p.y) / 10) + 1]) && (getY() + getHeight() < 400))
                        count++;
                     else
                        return false;
                  }
            }
      }